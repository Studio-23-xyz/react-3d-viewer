{"version":3,"sources":["Components/Home/Canvas/CanvasView.js","Models/fire.fbx"],"names":["CanvasView","backgroundStyle","visualaizer","useContext","ControlData","model","enableRotation","rotationSpeed","rotationTopLimit","rotationBottomLimit","zoomEnable","zoomInLimit","zoomOutLimit","background","finalModel","require","default","Model","fbx","useLoader","FBXLoader","object","position","console","log","url","extension","obj","OBJLoader","gltf","GLTFLoader","scene","type","value","tbg","gl","preserveDrawingBuffer","style","id","width","height","className","orthographic","camera","zoom","far","intensity","angle","maxPolarAngle","Math","PI","minPolarAngle","enableZoom","maxZoom","minZoom","autoRotate","autoRotateSpeed"],"mappings":"oIAAA,2FA6FeA,UAnFI,WAClB,IA2CIC,EA3CIC,EAAgBC,qBAAWC,KAA3BF,YACAG,EAAUH,EAAVG,MAEPC,EAQGJ,EARHI,eACAC,EAOGL,EAPHK,cACAC,EAMGN,EANHM,iBACAC,EAKGP,EALHO,oBACAC,EAIGR,EAJHQ,WACAC,EAGGT,EAHHS,YACAC,EAEGV,EAFHU,aACAC,EACGX,EADHW,WAEGC,EAAaC,EAAQ,IAA4BC,QAEjDC,EAAQ,WACX,IAAMC,EAAMC,YAAUC,IAAWN,GACjC,OAAO,2BAAWO,OAAQH,EAAKI,SAAU,CAAC,GAAI,EAAG,MA4BlD,GA1Bc,KAAVjB,GACHkB,QAAQC,IAAInB,GACZS,EAAaT,EAAMoB,IACK,QAApBpB,EAAMqB,WACTT,EAAQ,WACP,IAAMC,EAAMC,YAAUC,IAAWN,GACjC,OAAO,2BAAWO,OAAQH,EAAKI,SAAU,CAAC,GAAI,EAAG,MAElDC,QAAQC,IAAI,aACkB,QAApBnB,EAAMqB,WAChBH,QAAQC,IAAI,YACZP,EAAQ,WACP,IAAMU,EAAMR,YAAUS,IAAWd,GACjC,OAAO,2BAAWO,OAAQM,EAAKL,SAAU,CAAC,GAAI,EAAG,OAEpB,SAApBjB,EAAMqB,WAA4C,QAApBrB,EAAMqB,YAC9CH,QAAQC,IAAI,aACZP,EAAQ,WACP,IAAMY,EAAOV,YAAUW,IAAYhB,GACnC,OAAO,2BAAWO,OAAQQ,EAAKE,MAAOT,SAAU,CAAC,GAAI,EAAG,QAI1DR,EAAaC,EAAQ,IAA4BC,QAG1B,oBAApBH,EAAWmB,KACd/B,EAAkBY,EAAWoB,UACvB,CACN,IAAIC,EAAMnB,MAAQ,YAAuBF,EAAWoB,QAASjB,QAC7Df,EAAe,cAAUiC,EAAV,KAEhB,OACC,eAAC,IAAD,CACCC,GAAI,CAAEC,uBAAuB,GAC7BC,MAAO,CAAExB,WAAYZ,GACrBqC,GAAG,eACHC,MAAM,MACNC,OAAO,OACPC,UAAU,eACVC,cAAY,EACZC,OAAQ,CAAErB,SAAU,CAAC,EAAG,EAAG,IAAKsB,KAAM,EAAGC,IAAK,KAR/C,UAUC,8BAAcC,UAAW,KACzB,2BAAWA,UAAW,GAAKxB,SAAU,CAAC,GAAI,GAAI,IAAKyB,MAAO,KAC1D,eAAC,IAAD,WACC,cAAC,IAAD,CACCC,cAAeC,KAAKC,GAAK1C,EACzB2C,cAAeF,KAAKC,GAAKzC,EACzB2C,WAAY1C,EACZ2C,QAAS1C,EAAc,GACvB2C,QAAS1C,EAAe,GACxB2C,WAAYjD,EACZkD,gBAAiBjD,IAGlB,+BACC,cAACU,EAAD,c,gCCtFL,OAAe,cAA0B","file":"static/js/4.de262922.chunk.js","sourcesContent":["import React, { useContext } from 'react';\nimport { Canvas, useLoader } from 'react-three-fiber';\nimport './Canvas.css';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { OrbitControls } from 'drei';\nimport { Physics } from 'use-cannon';\nimport { ControlData } from '../VisualaizerRaj';\n\nconst CanvasView = () => {\n\tconst { visualaizer } = useContext(ControlData);\n\tconst { model } = visualaizer;\n\tconst {\n\t\tenableRotation,\n\t\trotationSpeed,\n\t\trotationTopLimit,\n\t\trotationBottomLimit,\n\t\tzoomEnable,\n\t\tzoomInLimit,\n\t\tzoomOutLimit,\n\t\tbackground,\n\t} = visualaizer;\n\tlet finalModel = require('../../../Models/fire.fbx').default;\n\n\tlet Model = () => {\n\t\tconst fbx = useLoader(FBXLoader, finalModel);\n\t\treturn <primitive object={fbx} position={[0, -1, 0]} />;\n\t};\n\tif (model !== '') {\n\t\tconsole.log(model);\n\t\tfinalModel = model.url;\n\t\tif (model.extension === 'fbx') {\n\t\t\tModel = () => {\n\t\t\t\tconst fbx = useLoader(FBXLoader, finalModel);\n\t\t\t\treturn <primitive object={fbx} position={[0, -1, 0]} />;\n\t\t\t};\n\t\t\tconsole.log('fbxModel');\n\t\t} else if (model.extension === 'obj') {\n\t\t\tconsole.log('objModel');\n\t\t\tModel = () => {\n\t\t\t\tconst obj = useLoader(OBJLoader, finalModel);\n\t\t\t\treturn <primitive object={obj} position={[0, -1, 0]} />;\n\t\t\t};\n\t\t} else if (model.extension === 'gltf' || model.extension === 'glb') {\n\t\t\tconsole.log('gltfmodel');\n\t\t\tModel = () => {\n\t\t\t\tconst gltf = useLoader(GLTFLoader, finalModel);\n\t\t\t\treturn <primitive object={gltf.scene} position={[0, -1, 0]} />;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfinalModel = require('../../../Models/fire.fbx').default;\n\t}\n\tlet backgroundStyle;\n\tif (background.type === 'plainBackground') {\n\t\tbackgroundStyle = background.value;\n\t} else {\n\t\tlet tbg = require(`../../../Background/${background.value}`).default;\n\t\tbackgroundStyle = `url(${tbg})`;\n\t}\n\treturn (\n\t\t<Canvas\n\t\t\tgl={{ preserveDrawingBuffer: true }}\n\t\t\tstyle={{ background: backgroundStyle }}\n\t\t\tid=\"renderCanvas\"\n\t\t\twidth=\"650\"\n\t\t\theight=\"3000\"\n\t\t\tclassName=\"canvas-style\"\n\t\t\torthographic\n\t\t\tcamera={{ position: [0, 0, 50], zoom: 1, far: 100 }}\n\t\t>\n\t\t\t<ambientLight intensity={0.5} />\n\t\t\t<spotLight intensity={0.5} position={[25, 25, 25]} angle={0.1} />\n\t\t\t<Physics>\n\t\t\t\t<OrbitControls\n\t\t\t\t\tmaxPolarAngle={Math.PI / rotationTopLimit}\n\t\t\t\t\tminPolarAngle={Math.PI / rotationBottomLimit}\n\t\t\t\t\tenableZoom={zoomEnable}\n\t\t\t\t\tmaxZoom={zoomInLimit / 10}\n\t\t\t\t\tminZoom={zoomOutLimit / 10}\n\t\t\t\t\tautoRotate={enableRotation}\n\t\t\t\t\tautoRotateSpeed={rotationSpeed}\n\t\t\t\t/>\n\n\t\t\t\t<mesh>\n\t\t\t\t\t<Model />\n\t\t\t\t</mesh>\n\t\t\t</Physics>\n\t\t</Canvas>\n\t);\n};\n\nexport default CanvasView;\n","export default __webpack_public_path__ + \"static/media/fire.315bd034.fbx\";"],"sourceRoot":""}